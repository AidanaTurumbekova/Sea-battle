import random
import os 

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')
def create_empty_field(size):
    return [["~"] * size for _ in range(size)]

# Display the player's field
def display_field(field):
    print("  " + " ".join(str(i + 1) for i in range(len(field[0]))))  # Column headers
    for r, row in enumerate(field):
        print(chr(65 + r) + " " + " ".join(row))  # Row headers (A-G)

# Place ships randomly on the field
def place_ships(field, ship_sizes):
    size = len(field)
    for ship_size in ship_sizes:
        while True:
            x = random.randint(0, size - 1)
            y = random.randint(0, size - 1)
            orientation = random.choice(["H", "V"])  # Horizontal or Vertical
            if can_place_ship(field, x, y, ship_size, orientation):
                for i in range(ship_size):
                    if orientation == "H":
                        field[x][y + i] = "S"
                    else:
                        field[x + i][y] = "S"
                break

# Check if a ship can be placed at a location
def can_place_ship(field, x, y, ship_size, orientation):
    size = len(field)
    for i in range(ship_size):
        xi, yi = (x, y + i) if orientation == "H" else (x + i, y)
        if xi >= size or yi >= size or field[xi][yi] != "~":
            return False
    return True

# Parse coordinates like "B3" into indices
def parse_coordinates(shot):
    if len(shot) < 2 or not shot[1:].isdigit():
        return -1, -1
    x = ord(shot[0].upper()) - 65
    y = int(shot[1:]) - 1
    return x, y

# Main game loop
def play_game():
    clear_screen()
    print("Welcome to Battleship!")
    player_name = input("Enter your name: ")

    # Create fields
    size = 7
    player_field = create_empty_field(size)  # What the player sees
    hidden_field = create_empty_field(size)  # Where the ships are placed

    # Place ships
    ship_sizes = [3, 2, 2, 1, 1, 1, 1]
    place_ships(hidden_field, ship_sizes)

    shots = 0
    hits = 0
    total_ship_parts = sum(ship_sizes)

    while hits < total_ship_parts:
        clear_screen()
        print(f"{player_name}, here's your field:")
        display_field(player_field)

        # Get player's shot
        shot = input("Enter your shot (e.g., A1, B3): ").upper()
        x, y = parse_coordinates(shot) 

 # Validate coordinates
        if x < 0 or x >= size or y < 0 or y >= size:
            print("Invalid coordinates! Try again.")
            input("Press Enter to continue...")
            continue
        if player_field[x][y] in ["M", "H"]:
            print("You already shot here! Try again.")
            input("Press Enter to continue...")
            continue
 # Process the shot
        shots += 1
        if hidden_field[x][y] == "S":
            player_field[x][y] = "H"
            hidden_field[x][y] = "X"
            hits += 1
            print("Hit!")
        else:
            player_field[x][y] = "M"
            print("Miss!")

        input("Press Enter to continue...")

    # Game over
    clear_screen()
    print(f"Congratulations, {player_name}! You sank all the ships in {shots} shots.")

# Run the game
play_game()


