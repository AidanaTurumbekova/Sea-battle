import random
import os 

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')
def create_empty_field(size):
    return [["~"] * size for _ in range(size)]

# Display the player's field
def display_field(field):
    print("  " + " ".join(str(i + 1) for i in range(len(field[0]))))  # Column headers
    for r, row in enumerate(field):
        print(chr(65 + r) + " " + " ".join(row))  # Row headers (A-G)

# Place ships randomly on the field
def place_ships(field, ship_sizes):
    size = len(field)
    for ship_size in ship_sizes:
        while True:
            x = random.randint(0, size - 1)
            y = random.randint(0, size - 1)
            orientation = random.choice(["H", "V"])  # Horizontal or Vertical
            if can_place_ship(field, x, y, ship_size, orientation):
                for i in range(ship_size):
                    if orientation == "H":
                        field[x][y + i] = "S"
                    else:
                        field[x + i][y] = "S"
                break

          if x + size > ROWS: return False
for i in range(size):
    if battlefield[x + i][y] != "~":  # Checks if the spot is empty
        return False
    if y > 0 and battlefield[x + i][y - 1] == "S": return False  # Checks left of the ship
    if y < COLS - 1 and battlefield[x + i][y + 1] == "S": return False
    elif orientation == "V": 
        if x + size > ROWS: return False
        for i in range(size):
            if battlefield[x + i][y] != "~":
                return False
 if y > 0 and battlefield[x + i][y - 1] == "S": return False
            if y < COLS - 1 and battlefield[x + i][y + 1] == "S": return False
            if x + i > 0 and battlefield[x + i - 1][y] == "S": return False
            if x + i < ROWS - 1 and battlefield[x + i + 1][y] == "S": return False
        return True


   def place_ships():
    ships = []
    for size in ship_sizes:
        placed = False
        while not placed:
            orientation = random.choice(["H", "V"])
            x = random.randint(0, ROWS - 1)
            y = random.randint(0, COLS - 1)
            if valid_placement(x, y, size, orientation):
                if orientation == "H":
                    for i in range(size):
                        battlefield[x][y + i] = "S"
                elif orientation == "V":
                    for i in range(size):
                        battlefield[x + i][y] = "S"
                placed = True
                ships.append(((x, y), orientation, size))
def play_game():
    global shots_taken
    print("Welcome to Battleship!")
    player_name = input("Enter your name: ")
    print(f"Hello, {player_name}! Let's start!")
    place_ships()

    while not all_ships_sunk():
        display_battlefield()

        try:
            shot = input("Enter your shot (e.g., B3): ").upper()
            x, y = parse_coordinates(shot)
            if x == -1 or y < 0 or y >= ROWS:
                print("Invalid coordinates! Please try again.")
                continue

for row in battlefield:
    print(" | ".join(row))





